{
	"definitions": {
		"access_token": {
			"type": "string",
			"description": "The short-lived service access token used to authenticate the subsequent API requests within the same session."
		},
		"authInfo": {
			"type": "boolean",
			"description": "Specifies if the information on the authorization mechanisms supported by this credential (PIN and OTP groups) shall be returned"
		},
		"authMode": {
			"type": "string",
			"description": "Specifies one of the authorization modes",
			"pattern": "^(implicit|explicit|oauth2code|oauth2token)$"
		},
		"authType": {
			"type": "array",
			"description": "Specifies one or more values corresponding to the authentication mechanisms supported by the Remote Service",
			"items": {
				"type": "string",
				"description": "Specifies one or more values corresponding to the authentication mechanisms supported by the Remote Service",
				"pattern": "^(external|TLS|basic|digest|oauth2code|oauth2implicit|oauth2client)$"
			}
		},
		"cert": {
			"type": "object",
			"description": "Contains information about the signature certificate",
			"required": [],
			"properties": {
				"status": {
					"type": "string",
					"description": "The Status Schema",
					"pattern": "^(valid|expired|revoked|suspended)$"
				},
				"certificates": {
					"type": "array",
					"description": "Contains one or more Base64-encoded X.509v3 certificates from the certificate chain",
					"items": {
						"type": "string",
						"description": "A single Base64-encoded X.509v3 certificate"
					}
				},
				"issuerDN": {
					"type": "string",
					"description": "The Issuer Subject Distinguished Name from the X.509v3 end entity certificate in printable string format"
				},
				"serialNumber": {
					"type": "string",
					"description": "The Serial Number from the X.509v3 certificate in hex encoded format"
				},
				"subjectDN": {
					"type": "string",
					"description": "The Distinguished Name from the X.509v3 certificate in printable string format"
				},
				"validFrom": {
					"type": "string",
					"description": "The validity start date from the X.509v3 certificate in printable string format"
				},
				"validTo": {
					"type": "string",
					"description": "The validity end date from the X.509v3 certificate in printable string format"
				}
			}
		},
		"certificates": {
			"type": "string",
			"description": "The Certificates Schema",
			"pattern": "^(none|single|chain)$"
		},
		"certInfo": {
			"type": "boolean",
			"description": "Specifies if the information on the end entity certificate shall be returned as printable strings"
		},
		"client_id": {
			"type": "string",
			"description": "This is the unique client ID previously assigned to the Signature Application by the Remote Service"
		},
		"client_secret": {
			"type": "string",
			"description": "This is the client secret previously assigned to the Signature Application by the Remote Service"
		},
		"clientData": {
			"type": "string",
			"description": "Arbitrary data from the Signature Application"
		},
		"code": {
			"type": "string",
			"description": "The authorization code returned by the authorization server"
		},
		"credentialID": {
			"type": "string",
			"description": "The identifier associated to the credential"
		},
		"credentialIDs": {
			"type": "array",
			"description": "One or more credentialID associated with the provided or implicit userID",
			"items": {
				"type": "string",
				"description": "The credentialIDs Schema"
			}
		},
		"description": {
			"type": "string",
			"description": "Contains a free form description of the authorization transaction in the lang language"
		},
		"expires_in": {
			"type": "number",
			"description": "The lifetime in seconds of the service access token."
		},
		"expiresIn": {
			"type": "number",
			"description": "The lifetime in seconds of the service access token"
		},
		"grant_type": {
			"type": "string",
			"description": "The grant type, which depends on the type of OAuth 2.0 flow:",
			"pattern": "^(authorization_code|client_credentials|refresh_token)$"
		},
		"hash": {
			"type": "array",
			"description": "One or more Base64-encoded hash values to be signed",
			"items": {
				"type": "string",
				"description": "Single Base64-encoded hash value to be signed"
			}
		},
		"hashAlgo": {
			"type": "string",
			"description": "Specifies the OID of the algorithm used to calculate the hash value(s)"
		},
		"hashTBS": {
			"type": "string",
			"description": "The Base64-encoded hash value to be time stamped"
		},
		"key": {
			"type": "object",
			"description": "Information about the key",
			"required": [
				"status",
				"algo",
				"len"
			],
			"properties": {
				"status": {
					"type": "string",
					"description": "The status of enablement of the signing key of the credential",
					"pattern": "^(enabled|disabled)$"
				},
				"algo": {
					"type": "array",
					"description": "The list of OIDs of the supported key algorithms",
					"items": {
						"type": "string",
						"description": "A single OID"
					}
				},
				"len": {
					"type": "integer",
					"description": "The length of the cryptographic key in bits"
				},
				"curve": {
					"type": "integer",
					"description": "The OID of the ECDSA curve"
				}
			}
		},
		"lang": {
			"type": "string",
			"description": "Request a preferred language according to RFC 3066"
		},
		"logo": {
			"type": "string",
			"description": "The URI of the image file containing the logo of the Remote Service which shall be published online"
		},
		"maxResults": {
			"type": "number",
			"description": "Maximum number of items to return"
		},
		"methods": {
			"type": "array",
			"description": "Specifies the list of names of all the API methods",
			"items": {
				"type": "string",
				"description": "The Method Name"
			}
		},
		"multisign": {
			"type": "boolean",
			"description": "Specifies if the credential supports multiple signatures to be created with a single authorization request"
		},
		"name": {
			"type": "string",
			"description": "The commercial name of the Remote Service"
		},
		"nextPageToken": {
			"type": "string",
			"description": "The page token for the next page of items"
		},
		"nonce": {
			"type": "string",
			"description": "Specifies a large random number with a high probability that it is generated by the Signature Application only once"
		},
		"numSignatures": {
			"type": "integer",
			"description": "The number of signatures to authorize"
		},
		"oauth2": {
			"type": "string",
			"description": "Specifies the complete URI of the OAuth 2.0 service authorization endpoint provided by the Remote Service"
		},
		"OTP": {
			"type": "string",
			"description": "The OTP collected from the user"
		},
		"OTPINFO": {
			"type": "object",
			"description": "Contains information about the credential's OTP",
			"required": [],
			"properties": {
				"presence": {
					"type": "string",
					"description": "Specifies if a text-based OTP is required or not, or optional"
				},
				"type": {
					"type": "string",
					"description": "Specifies if a text-based OTP is required or not, or optional"
				},
				"format": {
					"type": "string",
					"description": "Specifies the data format of the OTP"
				},
				"label": {
					"type": "string",
					"description": "Specifies an optional label for the data field used to collect the OTP in the user interface"
				},
				"description": {
					"type": "string",
					"description": "Optionally specifies a free form description of the OTP mechanism in the language specified in the lang parameter"
				},
				"ID": {
					"type": "string",
					"description": "Specifies the identifier of the OTP device or application"
				},
				"provider": {
					"type": "string",
					"description": "Optionally specifies the provider of the OTP device or application."
				}
			}
		},
		"pageToken": {
			"type": "string",
			"description": "The page token for the new page of items"
		},
		"PIN": {
			"type": "string",
			"description": "The PIN collected from the user"
		},
		"PININFO": {
			"type": "object",
			"description": "Contains information about the credential's PIN",
			"required": [],
			"properties": {
				"presence": {
					"type": "string",
					"description": "Specifies if a text-based PIN is required or not, or optional"
				},
				"format": {
					"type": "string",
					"description": "Specifies the format of the PIN",
					"pattern": "^(A|B)$"
				},
				"label": {
					"type": "string",
					"description": "The Label Schema"
				},
				"description": {
					"type": "string",
					"description": "It optionally specifies a free form description of the PIN in the language specified in the lang parameter"
				}
			}
		},
		"redirect_uri": {
			"type": "string",
			"description": "The URL where the user was redirected after the authorization process completed"
		},
		"refresh_token": {
			"type": "string",
			"description": "The long-lived refresh token returned from the previous HTTP Basic Authentication"
		},
		"region": {
			"type": "string",
			"description": "The ISO 3166-1 Alpha-2 code of the Country where the Remote Service provider is established"
		},
		"rememberMe": {
			"type": "boolean",
			"description": "option that the user may activate during the authentication phase to stay signed in"
		},
		"SAD": {
			"type": "string",
			"description": "The Signature Activation Data to provide as input to the signatures/signHash method."
		},
		"SCAL": {
			"type": "string",
			"description": "Specifies the Sole Control Assurance Level required by the credential, as defined in CEN EN 419 241-1",
			"pattern": "^(1|2)$"
		},
		"signAlgo": {
			"type": "string",
			"description": "Specifies the OID of the algorithm to use for signing"
		},
		"signAlgoParams": {
			"type": "string",
			"description": "Specifies the Base64-encoded of DER-encoded ASN.1 signature parameters"
		},
		"signatures": {
			"type": "array",
			"description": "Array of Base64-encoded signed hash",
			"items": {
				"type": "string",
				"description": "One Base64-encoded signed hash"
			}
		},
		"timestamp": {
			"type": "string",
			"description": "The Base64-encoded time-stamp token as defined in RFC 3161 as updated by RFC 5816"
		},
		"specs": {
			"type": "string",
			"description": "The version of this specification implemented by the provider"
		},
		"token": {
			"type": "string",
			"description": "The token that the Signature Application wants to get revoked."
		},
		"token_type": {
			"type": "string",
			"description": "Specifies a Bearer token type as defined in RFC6750"
		},
		"token_type_hint": {
			"type": "string",
			"description": "Specifies an optional hint about the type of the token submitted for revocation."
		},
		"userID": {
			"type": "string",
			"description": "The user identifier associated to the user identity"
		},
		"input-info": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for info method",
			"required": [],
			"properties": {
				"lang": {
					"$ref": "#/definitions/lang"
				}
			}
		},
		"input-auth-login": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for auth/login method",
			"required": [
				"rememberMe"
			],
			"properties": {
				"refresh_token": {
					"$ref": "#/definitions/refresh_token"
				},
				"rememberMe": {
					"$ref": "#/definitions/rememberMe"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-auth-revoke": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for auth/revoke method",
			"required": [
				"token"
			],
			"properties": {
				"token": {
					"$ref": "#/definitions/token"
				},
				"token_type_hint": {
					"$ref": "#/definitions/token_type_hint"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-oauth2-token": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for oauth2/token method",
			"required": [
				"grant_type",
				"client_id",
				"client_secret"
			],
			"properties": {
				"grant_type": {
					"$ref": "#/definitions/grant_type"
				},
				"code": {
					"$ref": "#/definitions/code"
				},
				"refresh_token": {
					"$ref": "#/definitions/refresh_token"
				},
				"client_id": {
					"$ref": "#/definitions/client_id"
				},
				"client_secret": {
					"$ref": "#/definitions/client_secret"
				},
				"redirect_uri": {
					"$ref": "#/definitions/redirect_uri"
				}
			}
		},
		"input-credentials-list": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for credentials/list method",
			"required": [],
			"properties": {
				"userID": {
					"$ref": "#/definitions/userID"
				},
				"maxResults": {
					"$ref": "#/definitions/maxResults"
				},
				"pageToken": {
					"$ref": "#/definitions/pageToken"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-credentials-info": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for credentials/info method",
			"required": [
				"credentialID"
			],
			"properties": {
				"credentialID": {
					"$ref": "#/definitions/credentialID"
				},
				"certificates": {
					"$ref": "#/definitions/certificates"
				},
				"certInfo": {
					"$ref": "#/definitions/certInfo"
				},
				"authInfo": {
					"$ref": "#/definitions/authInfo"
				},
				"lang": {
					"$ref": "#/definitions/lang"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-credentials-authorize": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for credentials/authorize method",
			"required": [
				"credentialID",
				"numSignatures"
			],
			"properties": {
				"credentialID": {
					"$ref": "#/definitions/credentialID"
				},
				"numSignatures": {
					"$ref": "#/definitions/numSignatures"
				},
				"hash": {
					"$ref": "#/definitions/hash"
				},
				"PIN": {
					"$ref": "#/definitions/PIN"
				},
				"OTP": {
					"$ref": "#/definitions/OTP"
				},
				"description": {
					"$ref": "#/definitions/description"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-credentials-extendTransaction": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for credentials/extendTransaction method",
			"required": [
				"credentialID",
				"SAD"
			],
			"properties": {
				"credentialID": {
					"$ref": "#/definitions/credentialID"
				},
			    "hash": {
					"$ref": "#/components/schemas/hash"
				},
				"SAD": {
					"$ref": "#/definitions/SAD"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-credentials-sendOTP": {
			"definitions": {},
			"type": "object",
			"description": "The Root Schema",
			"required": [
				"credentialID"
			],
			"properties": {
				"credentialID": {
					"$ref": "#/definitions/credentialID"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-signatures-signhash": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for signatures/signHash method",
			"required": [
				"credentialID",
				"SAD",
				"hash",
				"signAlgo"
			],
			"properties": {
				"credentialID": {
					"$ref": "#/definitions/credentialID"
				},
				"SAD": {
					"$ref": "#/definitions/SAD"
				},
				"hash": {
					"$ref": "#/definitions/hash"
				},
				"hashAlgo": {
					"$ref": "#/definitions/hashAlgo"
				},
				"signAlgo": {
					"$ref": "#/definitions/signAlgo"
				},
				"signAlgoParams": {
					"$ref": "#/definitions/signAlgoParams"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"input-signatures-timestamp": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for signatures/timestamp method",
			"required": [
				"hash",
				"hashAlgo"
			],
			"properties": {
				"hash": {
					"$ref": "#/definitions/hashTBS"
				},
				"hashAlgo": {
					"$ref": "#/definitions/hashAlgo"
				},
				"nonce": {
					"$ref": "#/definitions/nonce"
				},
				"clientData": {
					"$ref": "#/definitions/clientData"
				}
			}
		},
		"output-info": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for info method",
			"required": [
				"specs",
				"name",
				"logo",
				"region",
				"lang",
				"description",
				"authType",
				"methods"
			],
			"properties": {
				"specs": {
					"$ref": "#/definitions/specs"
				},
				"name": {
					"$ref": "#/definitions/name"
				},
				"logo": {
					"$ref": "#/definitions/logo"
				},
				"region": {
					"$ref": "#/definitions/region"
				},
				"lang": {
					"$ref": "#/definitions/lang"
				},
				"authType": {
					"$ref": "#/definitions/authType"
				},
				"oauth2": {
					"$ref": "#/definitions/oauth2"
				},
				"methods": {
					"$ref": "#/definitions/methods"
				}
			}
		},
		"output-auth-login": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for auth/login method",
			"required": [
				"access_token"
			],
			"properties": {
				"access_token": {
					"$ref": "#/definitions/access_token"
				},
				"refresh_token": {
					"$ref": "#/definitions/refresh_token"
				},
				"expires_in": {
					"$ref": "#/definitions/expires_in"
				}
			}
		},
		"output-oauth2-token": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for oauth2/token method",
			"required": [
				"access_token",
				"token_type"
			],
			"properties": {
				"access_token": {
					"$ref": "#/definitions/access_token"
				},
				"refresh_token": {
					"$ref": "#/definitions/refresh_token"
				},
				"token_type": {
					"$ref": "#/definitions/token_type"
				},
				"expires_in": {
					"$ref": "#/definitions/expires_in"
				}
			}
		},
		"output-credentials-list": {
			"definitions": {},
			"type": "object",
			"description": "Input parameters for credentials/list method",
			"required": [
				"credentialIDs"
			],
			"properties": {
				"credentialIDs": {
					"$ref": "#/definitions/credentialIDs"
				},
				"nextPageToken": {
					"$ref": "#/definitions/nextPageToken"
				}
			}
		},
		"output-credentials-info": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for credentials/info method",
			"required": [
				"key",
				"cert",
				"authMode",
				"PIN",
				"OTP",
				"multisign",
				"lang"
			],
			"properties": {
				"description": {
					"$ref": "#/definitions/description"
				},
				"key": {
					"$ref": "#/definitions/key"
				},
				"cert": {
					"$ref": "#/definitions/cert"
				},
				"authMode": {
					"$ref": "#/definitions/authMode"
				},
				"SCAL": {
					"$ref": "#/definitions/SCAL"
				},
				"PIN": {
					"$ref": "#/definitions/PININFO"
				},
				"OTP": {
					"$ref": "#/definitions/OTPINFO"
				},
				"multisign": {
					"$ref": "#/definitions/multisign"
				},
				"lang": {
					"$ref": "#/definitions/lang"
				}
			}
		},
		"output-credentials-authorize": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for credentials/authorize method",
			"required": [
				"SAD"
			],
			"properties": {
				"SAD": {
					"$ref": "#/definitions/SAD"
				},
				"expiresIn": {
					"$ref": "#/definitions/expiresIn"
				}
			}
		},
		"output-credentials-extendTransaction": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for credentials/extendTransaction method",
			"required": [
				"SAD"
			],
			"properties": {
				"SAD": {
					"$ref": "#/definitions/SAD"
				},
				"expiresIn": {
					"$ref": "#/components/schemas/expiresIn"
				}
			}
		},
		"output-signatures-signhash": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for signatures/signHash method",
			"required": [
				"signatures"
			],
			"properties": {
				"signatures": {
					"$ref": "#/definitions/signatures"
				}
			}
		},
		"output-signatures-timestamp": {
			"definitions": {},
			"type": "object",
			"description": "Output parameters for signatures/timestamp method",
			"required": [
				"timestamp"
			],
			"properties": {
				"timestamp": {
					"$ref": "#/definitions/timestamp"
				}
			}
		}
	},
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "#/csc/v0",
	"type": "object",
	"description": "The CSC version 0 methods",
	"required": [],
	"properties": {
		"input-info": {
			"$ref": "#/definitions/input-info"
		},
		"input-auth-login": {
			"$ref": "#/definitions/input-auth-login"
		},
		"input-auth-revoke": {
			"$ref": "#/definitions/input-auth-revoke"
		},
		"input-oauth2-token": {
			"$ref":"#/definitions/input-oauth2-token"
		},
		"input-credentials-list": {
			"$ref":"#/definitions/input-credentials-list"
		},
		"input-credentials-info": {
			"$ref":"#/definitions/input-credentials-info"
		},
		"input-credentials-authorize": {
			"$ref":"#/definitions/input-credentials-authorize"
		},
		"input-credentials-extendTransaction": {
			"$ref":"#/definitions/input-credentials-extendTransaction"
		},
		"input-credentials-sendOTP": {
			"$ref":"#/definitions/input-credentials-sendOTP"
		},
		"input-signatures-signhash": {
			"$ref":"#/definitions/input-signatures-signhash"
		},
		"input-signatures-timestamp": {
			"$ref":"#/definitions/input-signatures-timestamp"
		},	
		"output-info": {
			"$ref": "#/definitions/output-info"
		},
		"output-auth-login": {
			"$ref": "#/definitions/output-auth-login"
		},
		"output-oauth2-token": {
			"$ref":"#/definitions/output-oauth2-token"
		},
		"output-credentials-list": {
			"$ref":"#/definitions/output-credentials-list"
		},
		"output-credentials-info": {
			"$ref":"#/definitions/output-credentials-info"
		},
		"output-credentials-authorize": {
			"$ref":"#/definitions/output-credentials-authorize"
		},
		"output-credentials-extendTransaction": {
			"$ref":"#/definitions/output-credentials-extendTransaction"
		},
		"output-signatures-signhash": {
			"$ref":"#/definitions/output-signatures-signhash"
		},
		"output-signatures-timestamp": {
			"$ref":"#/definitions/output-signatures-timestamp"
		}

	}
}

